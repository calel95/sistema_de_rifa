import streamlit as st
import pandas as pd
import requests

# Configura√ß√£o da p√°gina
st.set_page_config(page_title="Sistema de Rifas", layout="wide")

def main():
    st.title("üé´ Sistema de Rifas")
    
    # Sidebar com op√ß√µes
    st.sidebar.title("Op√ß√µes")
    opcao = st.sidebar.radio(
        "Escolha uma op√ß√£o:",
        ["Visualizar N√∫meros", "Comprar N√∫mero","Remover Comprador"]
    )
    
    # URL base da sua API FastAPI
    BASE_URL = "http://localhost:8000/numeros/"
    
    if opcao == "Visualizar N√∫meros":
        st.header("Visualiza√ß√£o de N√∫meros")
        
        # Tabs para diferentes visualiza√ß√µes
        tab1, tab2, tab3 = st.tabs(["Todos os N√∫meros", "n√∫meros dispon√≠veis", "N√∫meros comprados"])
        
        with tab1:
            try:
                # Aqui voc√™ faria a chamada real para sua API
                response = requests.get(BASE_URL)
                rifa = response.json()
                

                
                df = pd.DataFrame(rifa)
                st.dataframe(
                    df,
                    column_config={
                        "numero": "N√∫mero",
                        "nome": "Nome do Comprador"
                    },
                    use_container_width=True
                )
            except Exception as e:
                st.error(f"Erro ao carregar os dados: {e}")
        
        with tab2:
            # Filtrar apenas n√∫meros dispon√≠veis
            df_disp = df[df['nome'].isna() | (df['nome'] == "")]
            if df_disp.all:               
                st.dataframe(df_disp, use_container_width=True)
            else:
                st.info("H√° n√∫meros dispon√≠veis")
        
        with tab3:
            # Filtrar apenas n√∫meros indispon√≠veis
            st.write("N√∫meros Comprados")
                    # Filtrar n√∫meros indispon√≠veis (nome preenchido)
            df_indisp = df[df['nome'].notna() & (df['nome'] != "")]
            if not df_indisp.empty:
                st.dataframe(df_indisp, use_container_width=True)
            else:
                st.info("N√£o h√° n√∫meros indispon√≠veis")
    
    # elif opcao == "Adicionar N√∫mero":
    #     st.header("Adicionar Novo N√∫mero")
        
    #     with st.form("adicionar_numero"):
    #         numero = st.text_input("N√∫mero da Rifa")
    #         nome = st.text_input("Nome do Comprador")
    #         submitted = st.form_submit_button("Adicionar")
            
    #         if submitted:
    #             if numero and nome:
    #                 try:
    #                     # Aqui voc√™ faria a chamada real para sua API
    #                     response = requests.post(
    #                     BASE_URL,
    #                     json={"numero": numero, "nome": nome}
    #                     )
    #                     st.success(f"N√∫mero {numero} adicionado com sucesso!")
    #                 except Exception as e:
    #                     st.error(f"Erro ao adicionar n√∫mero: {e}")
    #             else:
    #                 st.warning("Por favor, preencha todos os campos")
    
    
    elif opcao == "Comprar N√∫mero":
        st.header("Comprar N√∫mero")
        
        with st.form("comprar_numero"):
            numero_atualizar = st.text_input("N√∫mero da Rifa")
            novo_nome = st.text_input("Novo Nome do Comprador")
            submitted = st.form_submit_button("Comprar")
            
            if submitted:
                if numero_atualizar and novo_nome:
                    try:
                        # Aqui voc√™ faria a chamada real para sua API
                        response = requests.put(
                        f"{BASE_URL}{numero_atualizar}",
                        json={"nome": novo_nome}
                        )
                        st.success(f"N√∫mero {numero_atualizar} comprado com sucesso!")
                    except Exception as e:
                        st.error(f"Erro ao comprar n√∫mero: {e}")
                else:
                    st.warning("Por favor, preencha todos os campos")

    elif opcao == "Remover Comprador":
        st.header("Remover Comprador")
        
        with st.form("remover_comp"):
            numero_atualizar = st.text_input("N√∫mero da Rifa")
            submitted = st.form_submit_button("Atualizar")
            
            if submitted:
                if numero_atualizar:
                    try:
                        # Aqui voc√™ faria a chamada real para sua API
                        response = requests.put(
                        f"{BASE_URL}{numero_atualizar}",
                        json={"nome": None}
                        )
                        st.success(f"comprador do numero {numero_atualizar} removido com sucesso!")
                    except Exception as e:
                        st.error(f"Erro ao remover comprador: {e}")
                else:
                    st.warning("Por favor, preencha todos os campos")

if __name__ == "__main__":
    main()